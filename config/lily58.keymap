#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "keypos/keypos_58keys.h"

#define XXX &none
#define ___ &trans

// Layers
#define DEF 0
#define SYM 1
#define NAV 2
#define FUN 3

/* GLOBAL SETTINGS */
#define QUICK_TAP_MS 175

/* HOMEROW MODS POSITIONAL KEYS */
#define THUMBS LH3 LH2 LH1 LH0 RH0 RH1 RH2 RH3
#define KEYS_L \
    LT0 LT1 LT2 LT3 LT4 LT5 \
    LM0 LM1 LM2 LM3 LM4 LM5 \
    LB0 LB1 LB2 LB3 LB4 LB5 \
    LF0 LF1 LF2 LF3 LF4 LF5 LEC
#define KEYS_R \
    RT0 RT1 RT2 RT3 RT4 RT5 \
    RM0 RM1 RM2 RM3 RM4 RM5 \
    RB0 RB1 RB2 RB3 RB4 RB5 \
    RF0 RF1 RF2 RF3 RF4 RF5 REC

/* COMBO CONFIG */
#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

// Soft off
&soft_off {
    hold-time-ms = <1000>;
};

// Sticky-key config
&sk {  
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

// Sticky-layer config
&sl {  
    ignore-modifiers;          // allow chording sticky mods & layers
};

// Layer-tap config
&lt {  
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

// Mod-tap config
&mt {  
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

/* CUSTOM KEYCODES */
#define WIN_LEFT LG(LC(LEFT))
#define WIN_RIGHT LG(LC(RIGHT))
#define WIN_LOCK LG(L)
#define WIN_CLOSE LA(F4)
#define CALTDEL LC(LA(DEL))

/ {
    behaviors {
        /* CUSTOM BEHAVIORS */
        // Window swapper - requires PR #1366
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <RB0>;
        };

        /* HOMEROW MODS */
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };
        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        /* MOD MORPHS */
        // tap: comma | shift + tap: semicolon | ctrl + shift + tap: -
        comma_inner_morph: comma_inner_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            bindings = <&kp SEMICOLON>, <&kp KP_MINUS>;
        };
        comma_morph: comma_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp COMMA>, <&comma_inner_morph>;
        };

        // tap: dot | shift + tap: colon | ctrl + shift + tap: _
        dot_inner_morph: dot_inner_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            bindings = <&kp COLON>, <&kp UNDER>;
        };
        dot_morph: dot_morph {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp DOT>, <&dot_inner_morph>;
        };

        // tap: slash | shift + tap: qmark | shift + ctrl + tap: excl
        qexcl_inner: qexcl_inner {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_RCTL)>;
            bindings = <&kp QMARK>, <&kp EXCL>;
        };
        qexcl: qexcl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp SLASH>, <&qexcl_inner>;
        };

        // tap: bspc | shift + tap: del | hold: layer hold
        bs_del: bs_del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp BSPC>, <&kp DEL>;
        };
        lt_bspc: lt_bspc {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&bs_del>;
        };

        // tap: space | shift + tap: bspc | hold: layer hold
        sp_bspc: sp_bspc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&kp SPACE>, <&kp BSPC>;
        };
        lt_spc: lt_spc {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <QUICK_TAP_MS>;
            bindings = <&mo>, <&sp_bspc>;
        };

        // smart shifts
        smart_shftl: smart_shftl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&sk LSHFT>, <&caps_word>;
        };
        smart_shftr: smart_shftr {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&sk RSHFT>, <&caps_word>;
        };

        /* TAP DANCE */
        td_winlock: td_winlock {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&none>, <&kp WIN_LOCK>, <&kp CALTDEL>;
        };
    };

    macros {
        fatarrow: fatarrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&macro_tap &kp EQUAL &kp GT>;
        };

        cdup: cdup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <30>;
            bindings = <&macro_tap &kp DOT &kp DOT &kp SLASH>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LM3 LM2>;
            bindings = <&kp ESC>;
            layers = <DEF>;
        };
        ret {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LM2 LM1>;
            bindings = <&kp RET>;
            layers = <DEF>;
        };
        tab {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LM1 LM0>;
            bindings = <&kp TAB>;
            layers = <DEF>;
        };

        co_all {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LF4 LF1>;
            bindings = <&kp LC(A)>;
            layers = <DEF>;
        };
        co_cut {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LF4 LF3>;
            bindings = <&kp LC(X)>;
            layers = <DEF>;
        };
        co_cp {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LF3 LF2>;
            bindings = <&kp LC(C)>;
            layers = <DEF>;
        };
        co_paste {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LF2 LF1>;
            bindings = <&kp LC(V)>;
            layers = <DEF>;
        };

        under {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RF0 RF1>;
            bindings = <&kp UNDER>;
            layers = <DEF>;
        };
        min {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RF1 RF2>;
            bindings = <&kp MINUS>;
            layers = <DEF>;
        };
        semi {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RF2 RF3>;
            bindings = <&kp SEMI>;
            layers = <DEF>;
        };
        cln {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RF3 RF4>;
            bindings = <&kp COLON>;
            layers = <DEF>;
        };
        fatarrow {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RM0 RM1>;
            bindings = <&fatarrow>;
            layers = <DEF>;
        };
        eq {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RM3 RM2>;
            bindings = <&kp EQUAL>;
            layers = <DEF>;
        };
        amps {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RM2 RM1>;
            bindings = <&kp AMPS>;
            layers = <DEF>;
        };
        grave {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RM3 RM4>;
            bindings = <&kp GRAVE>;
            layers = <DEF>;
        };

        lbkt {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LB1 LB0>;
            bindings = <&kp LBKT>;
            layers = <DEF>;
        };
        rbkt {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RB1 RB0>;
            bindings = <&kp RBKT>;
            layers = <DEF>;
        };

        lpar {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LB1 LB2>;
            bindings = <&kp LPAR>;
            layers = <DEF>;
        };
        rpar {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RB1 RB2>;
            bindings = <&kp RPAR>;
            layers = <DEF>;
        };

        lbrc {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LB2 LB3>;
            bindings = <&kp LBRC>;
            layers = <DEF>;
        };
        rbrc {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <RB2 RB3>;
            bindings = <&kp RBRC>;
            layers = <DEF>;
        };

        lt {
            timeout-ms = <COMBO_TERM_FAST>;
            key-positions = <LB3 LB4>;
            bindings = <&kp LT>;
            layers = <DEF>;
        };
        gt {
            timeout-ms = <COMBO_TERM_FAST>;
            key-positions = <RB3 RB4>;
            bindings = <&kp GT>;
            layers = <DEF>;
        };

        cplck {
            timeout-ms = <COMBO_TERM_SLOW>;
            key-positions = <LB5 RB5>;
            bindings = <&kp CAPS>;
            layers = <DEF>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            display-name = "DEF";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
    ___           ___           ___           ___           ___           ___                                         ___           ___           ___           ___           ___           ___  
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    ___           &kp Q         &kp W         &kp F         &kp P         &kp B                                       &kp J         &kp L         &kp U         &kp Y         &kp SQT       ___ 
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┤ 
    &smart_shftl  &hml LGUI A   &hml LALT R   &hml LCTRL S  &hml LSHFT T  &kp G                                       &kp M         &hmr RSHFT N  &hmr RCTRL E  &hmr RALT I   &hmr RGUI O   &smart_shftr
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┤ 
    ___           &kp Z         &kp X         &kp C         &kp D         &kp V         &td_winlock     ___           &kp K         &kp H         &comma_morph  &dot_morph    &qexcl        &cdup
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────╯ 
                                              ___           &lt FUN ESC  &mt LSHFT ESC &lt_bspc NAV 0  &lt_spc SYM 0 &mt RSHFT RET  &lt FUN TAB   ___           
//                                          ╰─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────╯
            >;
        };

        sym {
            display-name = "SYM";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
    ___           ___           ___           ___           ___           ___                                         ___           ___           ___           ___           ___           ___          
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    ___           ___           &kp LT        &kp GT        &kp AT        &kp UNDER                                   &kp PIPE      &kp MINUS     &kp LBKT      &kp RBKT      ___           ___    
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    ___      &hml LGUI EXCL &hml LALT MINUS &hml LCTRL PLUS &hml LSHFT EQUAL &kp HASH                                 &kp AMPS  &hmr RSHFT COLON &hmr RCTRL LPAR &hmr RALT RPAR &hmr RGUI GRAVE   ___    
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    ___           &kp BSLH      &kp SLASH     &kp STAR      &kp CARET     &kp PRCNT     ___             ___           &kp TILDE     &kp DLLR      &kp LBRC     &kp RBRC       ___           ___          
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────╯ 
                                              ___           ___           ___           &lt_spc NAV 0   ___           ___           ___           ___           
//                                          ╰─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────╯
            >;
        };

        nav {
            display-name = "NAV";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
    ___           ___           ___           ___           ___           ___                                         ___           ___           ___           ___           ___           ___  
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    &kp COLON     &kp STAR      &kp N7        &kp N8        &kp N9        &kp SLASH                                   &kp ESC      &kp WIN_LEFT   &kp LS(TAB)   &kp TAB      &kp WIN_RIGHT  ___  
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┤ 
    &kp DOT      &hml LGUI PLUS &hml LALT N4  &hml LCTRL N5 &hml LSHFT N6 &kp MINUS                                   &swapper    &hmr RSHFT LEFT &hmr RCTRL DOWN &hmr RALT UP &hmr RGUI RIGHT     ___  
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────┤ 
    ___           &kp N0        &kp N1        &kp N2        &kp N3        &kp EQUAL     ___             ___           &kp RET       &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       ___  
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤─────────────╯ 
                                              ___           ___           ___           ___             ___           ___           ___           ___           
//                                          ╰─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────╯
            >;
        };

        fun {
            display-name = "FUN";
            bindings = <
//╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
    &soft_off     &out OUT_USB  &out OUT_BLE  ___           ___           &ext_power EP_ON                     &ext_power EP_ON     ___           ___           ___           ___           &soft_off  
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                ___           ___           ___           ___           ___           ___
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                      &kp F7        &kp F8        &kp F9        &kp F10       &kp F11       &kp F12  
//├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ 
    ___          &kp WIN_CLOSE  &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP  ___           ___             ___           ___           &kp C_PREV    &kp C_PP     &kp C_NEXT    &kp WIN_CLOSE  ___  
//╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯ 
                                              ___           ___           ___           ___             ___           ___           ___           ___           
//                                          ╰─────────────┼─────────────┼─────────────┼─────────────╯ ╰─────────────┼─────────────┼─────────────┼─────────────╯
            >;
        };
    };
};