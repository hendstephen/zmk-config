#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

// Make homerow combos tap-only (so HRTs can be chorded instantaneously)
#define HRC_DEL &hml LS(LALT) DEL
#define HRC_ION &hmr_ion RS(RALT(RGUI)) 0

#define HRC_LPAR &hml LS(LCTRL) LPAR
#define HRC_RPAR &hmr RS(RCTRL) RPAR

#define HRC_LMRC &hml LC(LALT) LMRC
#define HRC_RMRC &hmr RC(RALT) RMRC

#define HRC_LMKT &hml LS LMKT
#define HRC_RMKT &hmr RS RMKT

#define HRC_LT &hml LA(LGUI) LT
#define HRC_GT &hmr RA(RGUI) GT

ZMK_COMBO(esc, &kp ESC, LT3 LT2, DEF SYM NAV, COMBO_TERM_SLOW);
ZMK_COMBO(ret, &kp RET, LT2 LT1, DEF SYM NAV, COMBO_TERM_SLOW);
ZMK_COMBO(tab, &kp TAB, LT1 LT3, DEF SYM NAV, COMBO_TERM_SLOW);
ZMK_COMBO(del, &kp DEL, LM3 LM1, DEF SYM NAV, COMBO_TERM_SLOW);

ZMK_COMBO(co_all, &kp LC(A), LB4 LB1, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(co_cut, &kp LC(X), LB4 LB3, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(co_cp, &kp LC(C), LB3 LB2, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(co_paste, &kp LC(V), LB2 LB1, DEF, COMBO_TERM_SLOW);

ZMK_COMBO(under, &kp UNDER, RB0 RB1, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(min, &kp MINUS, RB1 RB2, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(semi, &kp SEMI, RB2 RB3, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(cln, &kp COLON, RB3 RB4, DEF NAV, COMBO_TERM_SLOW);

ZMK_COMBO(fatarrow, &fatarrow, RT0 RT1, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(eq, &kp EQUAL, RT3 RT2, DEF NAV, COMBO_TERM_SLOW);
ZMK_COMBO(amps, &kp AMPS, RT2 RT1, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(grave, &kp GRAVE, RT3 RT4, DEF, COMBO_TERM_SLOW);

ZMK_COMBO(lbkt, &kp LMKT, LM1 LM0, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(rbkt, &kp RMKT, RM1 RM0, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(lpar, &kp LPAR, LM1 LM2, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(rpar, &kp RPAR, RM1 RM2, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(lbrc, &kp LMRC, LM2 LM3, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(rbrc, &kp RMRC, RM2 RM3, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(lt, &kp LT, LM4 LM3, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(gt, &kp GT, RM4 RM3, DEF, COMBO_TERM_SLOW);

ZMK_COMBO(cplck, &kp CAPS, LM5 RM5, DEF, COMBO_TERM_SLOW);
ZMK_COMBO(cb_ion, &ion, RM1 RM3 RM4, DEF, COMBO_TERM_SLOW);