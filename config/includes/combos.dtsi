// Combo timeouts
#define COMBO_FAST 18
#define COMBO_SLOW 30

// Combo prior idle timeouts
#define IDLE_FAST 150
#define IDLE_SLOW 50

// Make homerow combos tap-only (so HRMs can be chorded instantaneously)
#define HRC_LBRC &hml LC(LSFT) LBRC
#define HRC_RBRC &hmr RC(RSFT) RBRC

ZMK_HOLD_TAP(lt_numwrd,
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <0>;
    bindings = <&mo>, <&num_word>;
)
#define NUMWRD &lt_numwrd NAV NAV

/* Home row combos */
ZMK_COMBO(ret     , &kp RET  , LM1 LM2 LM3, DEF NHT SYM NAV, COMBO_SLOW, IDLE_SLOW)
ZMK_COMBO(esc     , &kp ESC  , RM1 RM2 RM3, DEF NHT SYM NAV, COMBO_SLOW, IDLE_SLOW)
ZMK_COMBO(tab     , &kp TAB  , LM1 LM3    , DEF NHT SYM NAV, COMBO_SLOW, IDLE_SLOW)
ZMK_COMBO(del     , &kp DEL  , RM3 RM1    , DEF NHT SYM NAV, COMBO_SLOW, IDLE_SLOW)

// Matching braces/brackets
ZMK_COMBO(lbkt    , &kp LBKT , LM1 LM0    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(rbkt    , &kp RBKT , RM1 RM0    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(lpar    , &kp LPAR , LM1 LM2    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(rpar    , &kp RPAR , RM1 RM2    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(lbrc    , HRC_LBRC , LM2 LM3    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(rbrc    , HRC_RBRC , RM2 RM3    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)

/* Left bottom row */
ZMK_COMBO(all     , &kp LC(A), LB4 LB1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(cut     , &kp LC(X), LB4 LB3    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(copy    , &kp LC(C), LB3 LB2    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(paste   , &kp LC(V), LB2 LB1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(excl    , &kp EXCL , LB1 LB0    , DEF NHT NAV, COMBO_FAST)

/* Right bottom row */
ZMK_COMBO(under   , &kp UNDER, RB0 RB1    , DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(min     , &kp MINUS, RB1 RB2    , DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(semi    , &kp SEMI , RB2 RB3    , DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(cln     , &kp COLON, RB3 RB4    , DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(dqt     , &kp DQT  , RB1 RB2 RB3, DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(numwrd  , NUMWRD   , RB1 RB4, DEF NHT NAV, COMBO_SLOW, IDLE_SLOW)

/* Right top row */
ZMK_COMBO(gt      , &kp GT   , RT1 RT2 RT3, DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(fatarrow, &fatarrow, RT0 RT1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(eq      , &kp EQUAL, RT3 RT2    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(amps    , &kp AMPS , RT2 RT1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(hash    , &kp HASH , RT4 RT3    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)

/* Left top row */
ZMK_COMBO(lt      , &kp LT   , LT1 LT2 LT3, DEF NHT NAV, COMBO_FAST)
ZMK_COMBO(at      , &kp AT   , LT3 LT2    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(pipe    , &kp PIPE , LT2 LT1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(star    , &kp STAR , LT1 LT0    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(dllr    , &kp DLLR , LT3 LT4    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)

/* Both top */
ZMK_COMBO(capword ,&caps_word, LT1 RT1    , DEF NHT    , COMBO_SLOW, IDLE_SLOW)

/* Others */
ZMK_COMBO(cplck   , &kp CAPS , LM5 RM5    , DEF NHT    , COMBO_SLOW)

/* Diagonals */
ZMK_COMBO(caret   , &kp CARET, LM1 LB2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(dllr    , &kp DLLR , RM1 RB2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)

// Common ones on both sides to encourage alternation. Diagonal to home row to minimize finger travel.
ZMK_COMBO(eq_l    , &kp EQUAL, LM1 LT2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(eq_r    , &kp EQUAL, RM1 RT2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(semi_l  , &kp SEMI , LM2 LB1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(semi_r  , &kp SEMI , RM2 RB1    , DEF NHT NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(dash_l  , &kp MINUS, LM2 LT3    , DEF NHT    , COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(dash_r  , &kp MINUS, RM2 RT3    , DEF NHT    , COMBO_FAST, IDLE_SLOW)

ZMK_COMBO(tilde_dg, &kp TILDE, LM3 LT2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(grave_dg, &kp GRAVE, RM3 RT2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)

ZMK_COMBO(perc_dg , &kp PRCNT, LB3 LM2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(hash_dg , &kp HASH , RB3 RM2    , DEF NHT    , COMBO_FAST, IDLE_SLOW)