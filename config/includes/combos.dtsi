// Combo timeouts
#define COMBO_FAST 18
#define COMBO_SLOW 30

// Combo prior idle timeouts
#define IDLE_FAST 150
#define IDLE_SLOW 50

// Make homerow combos tap-only (so HRMs can be chorded instantaneously)
#define HRC_ION &hmr_ion RS(RA(RGUI)) 0

#define HRC_LPAR &hml LS(LCTRL) LPAR
#define HRC_RPAR &hmr RS(RCTRL) RPAR

#define HRC_LBRC &hml LC(LALT) LBRC
#define HRC_RBRC &hmr RC(RALT) RBRC

#define HRC_LBKT &hml LSFT LBKT
#define HRC_RBKT &hmr RSFT RBKT

#define HRC_ESC &hmr RS(RC(RALT)) ESC
#define HRC_DEL &hmr RS(RALT) DEL

#define HRC_TAB &hml LS(LALT) TAB
#define HRC_RET &hml LS(LC(LALT)) RET

/* Draw separate */
ZMK_COMBO(ion     , HRC_ION  , RM1 RM3 RM4, DEF        , COMBO_SLOW)
ZMK_COMBO(cdup    , &cdup    , RB1 RB3 RB4, DEF     NAV, COMBO_FAST)

/* Home row combos */
ZMK_COMBO(ret     , HRC_RET  , LM1 LM2 LM3, DEF HND SYM NAV, COMBO_SLOW, IDLE_SLOW)
ZMK_COMBO(esc     , HRC_ESC  , RM1 RM2 RM3, DEF HND SYM NAV, COMBO_SLOW, IDLE_SLOW)
ZMK_COMBO(tab     , HRC_TAB  , LM1 LM3    , DEF HND SYM NAV, COMBO_SLOW, IDLE_SLOW)
ZMK_COMBO(del     , HRC_DEL  , RM3 RM1    , DEF HND SYM NAV, COMBO_SLOW, IDLE_SLOW)

ZMK_COMBO(percent , &kp PRCNT, LT3 LT1    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(grave   , &kp GRAVE, RT1 RT3    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(tilde   , &kp TILDE, LB3 LB2 LB1, DEF     NAV, COMBO_FAST)

// Matching braces/brackets
ZMK_COMBO(lbkt    , HRC_LBKT , LM1 LM0    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(rbkt    , HRC_RBKT , RM1 RM0    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(lpar    , HRC_LPAR , LM1 LM2    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(rpar    , HRC_RPAR , RM1 RM2    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(lbrc    , HRC_LBRC , LM2 LM3    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(rbrc    , HRC_RBRC , RM2 RM3    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)

/* Left bottom row */
ZMK_COMBO(all     , &kp LC(A), LB4 LB1    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(cut     , &kp LC(X), LB4 LB3    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(copy    , &kp LC(C), LB3 LB2    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(paste   , &kp LC(V), LB2 LB1    , DEF HND NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(excl    , &kp EXCL , LB1 LB0    , DEF     NAV, COMBO_FAST)

/* Right bottom row */
ZMK_COMBO(under   , &kp UNDER, RB0 RB1    , DEF     NAV, COMBO_FAST)
ZMK_COMBO(min     , &kp MINUS, RB1 RB2    , DEF     NAV, COMBO_FAST)
ZMK_COMBO(semi    , &kp SEMI , RB2 RB3    , DEF     NAV, COMBO_FAST)
ZMK_COMBO(cln     , &kp COLON, RB3 RB4    , DEF     NAV, COMBO_FAST)
ZMK_COMBO(dqt     , &kp DQT  , RB1 RB2 RB3, DEF     NAV, COMBO_FAST)
ZMK_COMBO(numwrd  , &num_word NAV, RB1 RB4, DEF HND, COMBO_SLOW, IDLE_SLOW)

/* Right top row */
ZMK_COMBO(gt      , &kp GT   , RT1 RT2 RT3, DEF     NAV, COMBO_FAST)
ZMK_COMBO(fatarrow, &fatarrow, RT0 RT1    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(eq      , &kp EQUAL, RT3 RT2    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(amps    , &kp AMPS , RT2 RT1    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(hash    , &kp HASH , RT4 RT3    , DEF     NAV, COMBO_FAST, IDLE_SLOW)

/* Left top row */
ZMK_COMBO(lt      , &kp LT   , LT1 LT2 LT3, DEF     NAV, COMBO_FAST)
ZMK_COMBO(at      , &kp AT   , LT3 LT2    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(pipe    , &kp PIPE , LT2 LT1    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(star    , &kp STAR , LT1 LT0    , DEF     NAV, COMBO_FAST, IDLE_SLOW)
ZMK_COMBO(dllr    , &kp DLLR , LT3 LT4    , DEF     NAV, COMBO_FAST, IDLE_SLOW)

/* Both top */
ZMK_COMBO(capword ,&caps_word, LT1 RT1    , DEF        , COMBO_SLOW, IDLE_SLOW)

/* Others */
ZMK_COMBO(cplck   , &kp CAPS , LM5 RM5    , DEF        , COMBO_SLOW)
